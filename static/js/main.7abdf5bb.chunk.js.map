{"version":3,"sources":["import_java_classes/components/ModalWizard/ModalWizard.tsx","import_java_classes/components/EmptyStateWidget/EmptyStateWidget.tsx","import_java_classes/components/ImportJavaClasses/ImportJavaClassesWizardClassListTableItems.tsx","import_java_classes/components/ImportJavaClasses/ImportJavaClassesWizardClassListTable.tsx","import_java_classes/components/ImportJavaClasses/ImportJavaClassesWizardFirstStep.tsx","import_java_classes/components/ImportJavaClasses/ImportJavaClassesWizard.tsx","import_java_classes/components/ImportJavaClasses/ImportJavaClasses.tsx","import_java_classes/index.tsx","index.tsx","import_java_classes/i18n/index.ts","import_java_classes/i18n/locales/en.ts","import_java_classes/i18n/setup.ts"],"names":["ModalWizard","buttonText","buttonStyle","buttonIcon","buttonDisabledStatus","buttonTooltipMessage","wizardTitle","wizardDescription","wizardSteps","useState","isOpen","setOpen","handleModalToggle","useCallback","WizardButton","Button","variant","icon","onClick","isDisabled","data-testid","WizardButtonWithTooltip","Tooltip","content","isAriaDisabled","Wizard","title","description","steps","onClose","EmptyStateWidget","emptyStateIcon","emptyStateTitleHeading","emptyStateTitleSize","emptyStateTitleText","emptyStateBodyText","EmptyState","EmptyStateIcon","Title","headingLevel","size","EmptyStateBody","ImportJavaClassesWizardClassListTableItems","fullClassName","selected","onJavaClassItemSelected","itemChecked","setItemChecked","onDataListCheckChange","DataListItem","name","DataListItemRow","DataListCheck","aria-labelledby","checked","onChange","DataListCell","id","ImportJavaClassesWizardClassListTable","selectedJavaClasses","retrievedJavaClasses","classesSet","Set","DataList","aria-label","isCompact","map","value","key","has","ImportJavaClassesWizardFirstStep","onSelectedJavaClassesUpdated","i18n","useImportJavaClassesWizardI18n","searchValue","setSearchValue","setRetrievedJavaClasses","onSearchValueChange","retrieveJavaClasses","retrieved","window","envelopeMock","lspGetClassServiceMocked","EmptyStep","CubesIcon","modalWizard","firstStep","emptyState","body","input","SearchInput","placeholder","onClear","autoFocus","length","ImportJavaClassesWizard","setSelectedJavaClasses","stepName","component","add","Array","from","delete","enableNext","canJumpTo","hideBackButton","secondStep","join","thirdStep","modalButton","text","ImportJavaClasses","defaults","importJavaClassesWizardI18nDefaults","dictionaries","importJavaClassesWizardI18nDictionaries","initialLocale","navigator","language","ctx","ImportJavaClassesWizardI18nContext","renderImportJavaClasses","selector","ReactDOM","document","getElementById","Showcase","buttonDisableStatus","setButtonDisableStatus","setButtonTooltipMessage","onSelectChange","event","target","onInputChange","className","render","en","en_common","nextButtonText","locale","dictionary","Map","React","useContext"],"mappings":"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","file":"static/js/main.7abdf5bb.chunk.js","sourcesContent":["/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useState, useCallback } from \"react\";\nimport { Button, Tooltip, Wizard, WizardStep } from \"@patternfly/react-core\";\n\nexport interface ModalWizardProps {\n  /** Text to apply to the Modal button */\n  buttonText: string;\n  /** Style to apply to the Modal button */\n  buttonStyle: \"primary\" | \"secondary\" | \"tertiary\" | \"danger\" | \"warning\" | \"link\" | \"plain\" | \"control\";\n  /** Icon to apply to the Modal button */\n  buttonIcon?: React.ReactNode;\n  /** Button disabled status */\n  buttonDisabledStatus: boolean;\n  /** Button tooltip message */\n  buttonTooltipMessage?: string;\n  /** Title of the Modal Wizard */\n  wizardTitle: string;\n  /** Title of the Modal Wizard */\n  wizardDescription: string;\n  /** Steps of the Modal Wizard */\n  wizardSteps: WizardStep[];\n}\n\nexport const ModalWizard: React.FunctionComponent<ModalWizardProps> = ({\n  buttonText,\n  buttonStyle,\n  buttonIcon,\n  buttonDisabledStatus,\n  buttonTooltipMessage,\n  wizardTitle,\n  wizardDescription,\n  wizardSteps,\n}: ModalWizardProps) => {\n  const [isOpen, setOpen] = useState(false);\n  const handleModalToggle = useCallback(() => setOpen(!isOpen), [isOpen]);\n  const WizardButton: React.FunctionComponent = () => {\n    return (\n      <Button\n        variant={buttonStyle}\n        icon={buttonIcon}\n        onClick={handleModalToggle}\n        isDisabled={buttonDisabledStatus}\n        data-testid={\"modal-wizard-button\"}\n      >\n        {buttonText}\n      </Button>\n    );\n  };\n  const WizardButtonWithTooltip: React.FunctionComponent = () => {\n    return (\n      <Tooltip content={buttonTooltipMessage}>\n        <Button\n          variant={buttonStyle}\n          icon={buttonIcon}\n          onClick={handleModalToggle}\n          isAriaDisabled={buttonDisabledStatus}\n          data-testid={\"modal-wizard-button\"}\n        >\n          {buttonText}\n        </Button>\n      </Tooltip>\n    );\n  };\n\n  return (\n    <>\n      {buttonTooltipMessage ? <WizardButtonWithTooltip /> : <WizardButton />}\n      <Wizard\n        title={wizardTitle}\n        description={wizardDescription}\n        steps={wizardSteps}\n        onClose={handleModalToggle}\n        isOpen={isOpen}\n      />\n    </>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, Title } from \"@patternfly/react-core\";\n\nexport interface EmptyStateWidgetProps {\n  /** Icon applied in the center of the Empty State Widget */\n  emptyStateIcon: React.ComponentType;\n  /** Empty State Widget title heading */\n  emptyStateTitleHeading: \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\";\n  /** Empty State Widget title size */\n  emptyStateTitleSize?: \"md\" | \"lg\" | \"xl\" | \"2xl\" | \"3xl\" | \"4xl\";\n  /** Empty State Widget title text */\n  emptyStateTitleText: string;\n  /** Empty State Widget body text */\n  emptyStateBodyText: string;\n}\n\nexport const EmptyStateWidget: React.FunctionComponent<EmptyStateWidgetProps> = ({\n  emptyStateIcon,\n  emptyStateTitleHeading,\n  emptyStateTitleSize,\n  emptyStateTitleText,\n  emptyStateBodyText,\n}: EmptyStateWidgetProps) => {\n  return (\n    <EmptyState>\n      <EmptyStateIcon icon={emptyStateIcon} />\n      <Title headingLevel={emptyStateTitleHeading} size={emptyStateTitleSize}>\n        {emptyStateTitleText}\n      </Title>\n      <EmptyStateBody>{emptyStateBodyText}</EmptyStateBody>\n    </EmptyState>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { DataListCell, DataListCheck, DataListItem, DataListItemRow } from \"@patternfly/react-core\";\nimport { useCallback, useState } from \"react\";\n\nexport interface ImportJavaClassesWizardClassListTableItemsProps {\n  /** Item class name */\n  fullClassName: string;\n  /** Item checkbox status */\n  selected: boolean;\n  /** Function to call when an item related checkbox is pressed by the user */\n  onJavaClassItemSelected: (fullClassName: string, add: boolean) => void;\n}\n\nexport const ImportJavaClassesWizardClassListTableItems: React.FunctionComponent<ImportJavaClassesWizardClassListTableItemsProps> =\n  ({ fullClassName, selected, onJavaClassItemSelected }: ImportJavaClassesWizardClassListTableItemsProps) => {\n    const [itemChecked, setItemChecked] = useState(selected);\n    const onDataListCheckChange = useCallback(() => {\n      onJavaClassItemSelected(fullClassName, !itemChecked);\n      setItemChecked(!itemChecked);\n    }, [fullClassName, itemChecked, onJavaClassItemSelected]);\n\n    return (\n      <DataListItem name={fullClassName}>\n        <DataListItemRow>\n          <DataListCheck aria-labelledby={fullClassName} checked={itemChecked} onChange={onDataListCheckChange} />\n          <DataListCell>\n            <span id={fullClassName}>{fullClassName}</span>\n          </DataListCell>\n        </DataListItemRow>\n      </DataListItem>\n    );\n  };\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { DataList } from \"@patternfly/react-core\";\nimport { ImportJavaClassesWizardClassListTableItems } from \"./ImportJavaClassesWizardClassListTableItems\";\n\nexport interface ImportJavaClassesWizardClassListTableProps {\n  /** Previously selected Java Classes from the user */\n  selectedJavaClasses: string[];\n  /** Retrieved JavaClasses from external service */\n  retrievedJavaClasses: string[];\n  /** Function to call when an item related checkbox is pressed by the user */\n  onJavaClassItemSelected: (fullClassName: string, add: boolean) => void;\n}\n\nexport const ImportJavaClassesWizardClassListTable: React.FunctionComponent<ImportJavaClassesWizardClassListTableProps> =\n  ({\n    selectedJavaClasses,\n    retrievedJavaClasses,\n    onJavaClassItemSelected,\n  }: ImportJavaClassesWizardClassListTableProps) => {\n    const classesSet = new Set(selectedJavaClasses);\n    return (\n      <DataList aria-label={\"class-data-list\"} isCompact>\n        {selectedJavaClasses.map((value) => (\n          <ImportJavaClassesWizardClassListTableItems\n            key={value}\n            fullClassName={value}\n            selected={true}\n            onJavaClassItemSelected={onJavaClassItemSelected}\n          />\n        ))}\n        {retrievedJavaClasses.map((value) => {\n          if (!classesSet.has(value)) {\n            return (\n              <ImportJavaClassesWizardClassListTableItems\n                key={value}\n                fullClassName={value}\n                selected={false}\n                onJavaClassItemSelected={onJavaClassItemSelected}\n              />\n            );\n          }\n        })}\n      </DataList>\n    );\n  };\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { Title, SearchInput } from \"@patternfly/react-core\";\nimport CubesIcon from \"@patternfly/react-icons/dist/js/icons/cubes-icon\";\nimport { useImportJavaClassesWizardI18n } from \"../../i18n\";\nimport { useCallback, useState } from \"react\";\nimport { EmptyStateWidget } from \"../EmptyStateWidget\";\nimport { ImportJavaClassesWizardClassListTable } from \"./ImportJavaClassesWizardClassListTable\";\n\nexport interface ImportJavaClassesWizardFirstStep {\n  /** Text to apply to the Modal button */\n  selectedJavaClasses: string[];\n  /** Text to apply to the Modal button */\n  onSelectedJavaClassesUpdated: (fullClassName: string, add: boolean) => void;\n}\n\nexport const ImportJavaClassesWizardFirstStep: React.FunctionComponent<ImportJavaClassesWizardFirstStep> = ({\n  selectedJavaClasses,\n  onSelectedJavaClassesUpdated,\n}) => {\n  const EMPTY_SEARCH_VALUE = \"\";\n  const { i18n } = useImportJavaClassesWizardI18n();\n  const [searchValue, setSearchValue] = useState(EMPTY_SEARCH_VALUE);\n  const [retrievedJavaClasses, setRetrievedJavaClasses] = useState<string[]>([]);\n  const onSearchValueChange = useCallback((value: string) => retrieveJavaClasses(value), []);\n  /* This function temporary mocks a call to the LSP service method getClasses */\n  const retrieveJavaClasses = (value: string) => {\n    setSearchValue(value);\n    const retrieved = window.envelopeMock.lspGetClassServiceMocked(value);\n    if (retrieved) {\n      setRetrievedJavaClasses(retrieved);\n    }\n  };\n\n  const EmptyStep: React.FunctionComponent = () => {\n    return (\n      <EmptyStateWidget\n        emptyStateIcon={CubesIcon}\n        emptyStateTitleHeading={\"h6\"}\n        emptyStateTitleSize={\"md\"}\n        emptyStateTitleText={i18n.modalWizard.firstStep.emptyState.title}\n        emptyStateBodyText={i18n.modalWizard.firstStep.emptyState.body}\n      />\n    );\n  };\n\n  return (\n    <>\n      <Title headingLevel=\"h6\" size=\"md\">\n        {i18n.modalWizard.firstStep.input.title}\n      </Title>\n      <SearchInput\n        placeholder={i18n.modalWizard.firstStep.input.placeholder}\n        value={searchValue}\n        onChange={onSearchValueChange}\n        onClear={() => onSearchValueChange(EMPTY_SEARCH_VALUE)}\n        autoFocus\n      />\n      {retrievedJavaClasses.length > 0 || selectedJavaClasses.length > 0 ? (\n        <ImportJavaClassesWizardClassListTable\n          selectedJavaClasses={selectedJavaClasses}\n          retrievedJavaClasses={retrievedJavaClasses}\n          onJavaClassItemSelected={onSelectedJavaClassesUpdated}\n        />\n      ) : (\n        <EmptyStep />\n      )}\n    </>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { ModalWizard } from \"../ModalWizard\";\nimport { useImportJavaClassesWizardI18n } from \"../../i18n\";\nimport { ImportJavaClassesWizardFirstStep } from \"./ImportJavaClassesWizardFirstStep\";\nimport { useState } from \"react\";\n\nexport interface ImportJavaClassesWizardProps {\n  /** Button disabled status */\n  buttonDisabledStatus: boolean;\n  /** Button tooltip message */\n  buttonTooltipMessage?: string;\n}\n\nexport const ImportJavaClassesWizard: React.FunctionComponent<ImportJavaClassesWizardProps> = ({\n  buttonDisabledStatus,\n  buttonTooltipMessage,\n}: ImportJavaClassesWizardProps) => {\n  const { i18n } = useImportJavaClassesWizardI18n();\n  const [selectedJavaClasses, setSelectedJavaClasses] = useState<string[]>([]);\n  const updateSelectedClasses = (fullClassName: string, add: boolean) => {\n    if (add) {\n      const classesSet = new Set(selectedJavaClasses);\n      classesSet.add(fullClassName);\n      setSelectedJavaClasses(Array.from(classesSet));\n    } else {\n      const classesSet = new Set(selectedJavaClasses);\n      classesSet.delete(fullClassName);\n      setSelectedJavaClasses(Array.from(classesSet));\n    }\n  };\n\n  const steps = [\n    {\n      name: i18n.modalWizard.firstStep.stepName,\n      component: (\n        <ImportJavaClassesWizardFirstStep\n          selectedJavaClasses={selectedJavaClasses}\n          onSelectedJavaClassesUpdated={updateSelectedClasses}\n        />\n      ),\n      enableNext: selectedJavaClasses.length > 0,\n      canJumpTo: true,\n      hideBackButton: true,\n    },\n    {\n      name: i18n.modalWizard.secondStep.stepName,\n      component: <p>You selected: {selectedJavaClasses.join(\", \")}</p>,\n      enableNext: false,\n      canJumpTo: selectedJavaClasses.length > 0,\n    },\n    {\n      name: i18n.modalWizard.thirdStep.stepName,\n      component: <p>Step 3 content</p>,\n      enableNext: false,\n      canJumpTo: false,\n    },\n  ];\n\n  return (\n    <ModalWizard\n      buttonStyle=\"secondary\"\n      buttonText={i18n.modalButton.text}\n      buttonDisabledStatus={buttonDisabledStatus}\n      buttonTooltipMessage={buttonTooltipMessage}\n      wizardTitle={i18n.modalWizard.title}\n      wizardDescription={i18n.modalWizard.description}\n      wizardSteps={steps}\n    />\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport {\n  importJavaClassesWizardI18nDictionaries,\n  ImportJavaClassesWizardI18nContext,\n  importJavaClassesWizardI18nDefaults,\n} from \"../../i18n\";\nimport { I18nDictionariesProvider } from \"@kogito-tooling/i18n/dist/react-components\";\nimport { ImportJavaClassesWizard } from \"./ImportJavaClassesWizard\";\n\nexport interface ImportJavaClassesProps {\n  /** Button disabled status */\n  buttonDisabledStatus: boolean;\n  /** Button tooltip message */\n  buttonTooltipMessage?: string;\n}\n\nexport const ImportJavaClasses: React.FunctionComponent<ImportJavaClassesProps> = ({\n  buttonDisabledStatus,\n  buttonTooltipMessage,\n}: ImportJavaClassesProps) => {\n  return (\n    <I18nDictionariesProvider\n      defaults={importJavaClassesWizardI18nDefaults}\n      dictionaries={importJavaClassesWizardI18nDictionaries}\n      initialLocale={navigator.language}\n      ctx={ImportJavaClassesWizardI18nContext}\n    >\n      <ImportJavaClassesWizard\n        buttonDisabledStatus={buttonDisabledStatus}\n        buttonTooltipMessage={buttonTooltipMessage}\n      />\n    </I18nDictionariesProvider>\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { ImportJavaClasses } from \"./components\";\n\nexport * from \"./components\";\n\nwindow.renderImportJavaClasses = (selector: string, buttonDisabledStatus: boolean, buttonTooltipMessage?: string) => {\n  ReactDOM.render(\n    <ImportJavaClasses buttonDisabledStatus={buttonDisabledStatus} buttonTooltipMessage={buttonTooltipMessage} />,\n    document.getElementById(selector)\n  );\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"@patternfly/react-core/dist/styles/base.css\";\nimport React, { useCallback, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { ImportJavaClasses } from \"./import_java_classes\";\n\nconst Showcase: React.FunctionComponent = () => {\n  const LSP_SERVER_NOT_AVAILABLE = \"Java LSP Server is not available. Please install Java Extension\";\n  const [buttonDisableStatus, setButtonDisableStatus] = useState(true);\n  const [buttonTooltipMessage, setButtonTooltipMessage] = useState(LSP_SERVER_NOT_AVAILABLE);\n  const onSelectChange = useCallback((event) => setButtonDisableStatus(event.target.value === \"true\"), []);\n  const onInputChange = useCallback((event) => setButtonTooltipMessage(event.target.value), []);\n  /* This function temporary mocks a call to the LSP service method getClasses */\n  const lspGetClassServiceMocked = (value: string) => {\n    /* Mocked data retrieved from LSP Service */\n    const booClassesList = [\"org.kie.test.kogito.Book\", \"org.kie.test.kogito.Boom\"];\n    const bookClassesList = [\"org.kie.test.kogito.Book\"];\n    const boomClassesList = [\"org.kie.test.kogito.Boom\"];\n\n    /* Temporary mocks managing */\n    if (value === \"Boo\") {\n      return booClassesList;\n    } else if (value === \"Book\") {\n      return bookClassesList;\n    } else if (value === \"Boom\") {\n      return boomClassesList;\n    } else {\n      return [];\n    }\n  };\n\n  window.envelopeMock = {\n    lspGetClassServiceMocked: (value: string) => lspGetClassServiceMocked(value),\n  };\n\n  return (\n    <div className=\"showcase\">\n      <p>\n        This showcase demonstrates how the <strong>Import Java Classes</strong> component works. Adding the component to\n        the DOM, will result to render a Button with <em>Import Java Classes</em> label. As default status, the button\n        is disabled with a tooltip reporting the reason. Using the above menu, you can modify the button status and the\n        related tooltip message.\n      </p>\n      <p>\n        To simulate the searching of a Java Classes on the Search box inside the wizard, please use values:\n        <em>Boo</em>, <em>Boom</em> or <em>Book</em> as key, which are mocked in this showcase to demonstrate the\n        component usage.\n      </p>\n      <div className=\"menu\">\n        <strong>Import Java classes button state</strong>\n        <select onChange={onSelectChange}>\n          <option value=\"true\">Disabled</option>\n          <option value=\"false\">Enabled</option>\n        </select>\n        <strong>Tooltip Message (Optional)</strong>\n        <input value={buttonTooltipMessage} onChange={onInputChange} />\n      </div>\n      <div className=\"import-java-classes\">\n        <ImportJavaClasses buttonDisabledStatus={buttonDisableStatus} buttonTooltipMessage={buttonTooltipMessage} />\n      </div>\n    </div>\n  );\n};\n\nReactDOM.render(<Showcase />, document.getElementById(\"root\"));\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from \"./ImportJavaClassesWizardI18n\";\nexport * from \"./setup\";\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ImportJavaClassesWizardI18n } from \"..\";\nimport { en as en_common } from \"@kogito-tooling/i18n-common-dictionary\";\n\nexport const en: ImportJavaClassesWizardI18n = {\n  ...en_common,\n  modalButton: {\n    text: \"Import Java classes\",\n  },\n  modalWizard: {\n    title: \"Import Java classes\",\n    description:\n      \"It converts your Java assets to DMN types. This is a one-time import action: if the Java class get updated, you will need to reimport it\",\n    firstStep: {\n      stepName: \"Select Java classes\",\n      input: {\n        title: \"Search:\",\n        placeholder: \"Search a class name ...\",\n      },\n      emptyState: {\n        title: \"No Java classes selected\",\n        body: \"Type the Java class name or part of the name to find the one you want to import\",\n      },\n    },\n    secondStep: {\n      stepName: \"Cherry-pick fields\",\n    },\n    thirdStep: {\n      stepName: \"Review\",\n      nextButtonText: \"Import\",\n    },\n  },\n};\n","/*\n * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from \"react\";\nimport { useContext } from \"react\";\nimport { en } from \"./locales\";\nimport { I18nContextType } from \"@kogito-tooling/i18n/dist/react-components\";\nimport { ImportJavaClassesWizardI18n } from \"./ImportJavaClassesWizardI18n\";\nimport { I18nDefaults, I18nDictionaries } from \"@kogito-tooling/i18n/dist/core\";\n\nexport const importJavaClassesWizardI18nDefaults: I18nDefaults<ImportJavaClassesWizardI18n> = {\n  locale: \"en\",\n  dictionary: en,\n};\nexport const importJavaClassesWizardI18nDictionaries: I18nDictionaries<ImportJavaClassesWizardI18n> = new Map([\n  [\"en\", en],\n]);\nexport const ImportJavaClassesWizardI18nContext = React.createContext<I18nContextType<ImportJavaClassesWizardI18n>>(\n  {} as never\n);\n\nexport function useImportJavaClassesWizardI18n(): I18nContextType<ImportJavaClassesWizardI18n> {\n  return useContext(ImportJavaClassesWizardI18nContext);\n}\n"],"sourceRoot":""}